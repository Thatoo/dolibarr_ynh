#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
#REMOVEME? path=$YNH_APP_ARG_PATH
#REMOVEME? admin=$YNH_APP_ARG_ADMIN
#member=0
#is_public=0
#REMOVEME? phpversion=$YNH_PHP_VERSION

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
#REMOVEME? ynh_script_progression --message="Validating installation parameters..." --weight=1

#REMOVEME? install_dir=/var/www/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

# Register (book) web path
#REMOVEME? ynh_webpath_register --app=$app --domain=$domain --path=$path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? ynh_script_progression --message="Storing installation settings..." --weight=2

#REMOVEME? ynh_app_setting_set --app=$app --key=domain --value=$domain
#REMOVEME? ynh_app_setting_set --app=$app --key=path --value=$path
#REMOVEME? ynh_app_setting_set --app=$app --key=admin --value=$admin
#ynh_app_setting_set --app=$app --key=is_public --value=$is_public
#ynh_app_setting_set --app=$app --key=member --value=$member
ynh_app_setting_set --app=$app --key=version --value=$(ynh_app_upstream_version "../manifest.json")

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing dependencies..." --weight=1

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
#REMOVEME? ynh_script_progression --message="Creating a MySQL database..." --weight=1

#REMOVEME? db_name=$(ynh_sanitize_dbid --db_name=$app)
#REMOVEME? db_user=$db_name
#REMOVEME? ynh_app_setting_set --app=$app --key=db_name --value=$db_name
#REMOVEME? ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

ynh_mysql_execute_as_root --sql="ALTER DATABASE $db_name charset=utf8"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1


# Load the last available version
source upgrade.d/upgrade.last.sh

# Create an app.src for the last version of nextcloud
cat > ../conf/app.src << EOF
SOURCE_URL=https://github.com/Dolibarr/dolibarr/archive/$next_version.tar.gz
SOURCE_SUM=$dolibarr_source_sha256
SOURCE_SUM_PRG=sha256sum
SOURCE_FORMAT=tar.bz2
SOURCE_IN_SUBDIR=true
EOF

#REMOVEME? ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir

# Download, check integrity, uncompress and patch the source from app.src
ynh_script_progression --message="Download source files..." --weight=70
ynh_setup_source --dest_dir="$install_dir"

# Create necessary files
#REMOVEME? data_dir=$install_dir/documents
touch $install_dir/htdocs/conf/conf.php

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM" --weight=2

fpm_footprint="medium"
fpm_usage="medium"

ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage

# Create a dedicated php-fpm config
ynh_add_fpm_config --phpversion=$phpversion --usage=$fpm_usage --footprint=$fpm_footprint
# Used by ynh_add_nginx_config
#REMOVEME? phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# PREPARE AND INSTALL APP
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/install.forced.php" --destination="$install_dir/htdocs/install/install.forced.php"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================

# Set right permissions for curl install
chown -R $app: "$install_dir"

# Set the app as temporarily public for cURL call
if ! ynh_permission_has_user --permission "main" --user="visitors"; then
#REMOVEME? 	ynh_permission_update --permission="main" --add="visitors"
fi

# Reload NGINX
#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

# Installation with curl

mkdir -p /var/log/$app/

ynh_script_progression --message="Finalizing installation..." --weight=1

ynh_script_progression --message="Generate fileconf" --weight=1
ynh_local_curl "/install/fileconf.php" \
		"testpost=ok"

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="installation - step 1" --weight=3
ynh_local_curl "/install/step1.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install1.html

ynh_exec_fully_quiet sleep 5
		
ynh_script_progression --message="installation - step 2 (may take a while)..." --weight=72
ynh_local_curl "/install/step2.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install2.html

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="installation - step 4" --weight=3
ynh_local_curl "/install/step4.php" \
		"testpost=ok" \
		"action=set" > /var/log/$app/install3.html

ynh_exec_fully_quiet sleep 5

# Generate a random password for the admin user (will be ignored because of LDAP)
password=$(ynh_string_random 8)

ynh_script_progression --message="installation - step 5" --weight=4
ynh_local_curl "/install/step5.php" \
		"testpost=ok" \
		"action=set" \
		"pass=$password" \
		"pass_verif=$password" > /var/log/$app/install4.html

ynh_exec_fully_quiet sleep 5

ynh_script_progression --message="configuring LDAP" --weight=1

# Populate the LDAP parameters
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap.sql

# Populate the database with YNH users.
ynh_mysql_connect_as --user=$db_name --password=$db_pwd --database=$db_name < ../conf/sql/ldap_user.sql

if php$phpversion $install_dir/scripts/user/sync_users_ldap2dolibarr.php commitiferror --server=localhost -y; then
        ynh_print_info --message="LDAP user update ok"
else
        ynh_print_info --message="LDAP user update ended with error"
fi

# Remove the public access
#REMOVEME? ynh_permission_update --permission="main" --remove="visitors"

#=================================================
# MODIFY A CONFIG FILE
#=================================================

# Setup HTTP auth in conf
ynh_script_progression --message="configuring config file" --weight=1
ynh_replace_string --match_string="dolibarr_main_authentication='dolibarr'" --replace_string="dolibarr_main_authentication='http'" --target_file="$install_dir/htdocs/conf/conf.php"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$install_dir/htdocs/conf/conf.php"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Set permissions on app files
if [ ! -f "$data_dir/install.lock" ]; then
	echo 'This is a lock file to prevent use of install pages (set with permission 440)' > "$data_dir/install.lock"
	chown $app:$app "$data_dir/install.lock"
	chmod 440 "$data_dir/install.lock"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

chmod 644 "$install_dir/htdocs/conf/conf.php"
mkdir -p "$data_dir"
chown -R $app: "$data_dir"
chmod go-w $data_dir

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate --logfile="$install_dir/documents/dolibarr.log"

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..." --weight=1

# Create the public space permission if needed
#REMOVEME? if ! ynh_permission_exists --permission "public_space"; then
#REMOVEME? 	ynh_permission_create --permission "public_space" --url "/public/" --allowed "visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
